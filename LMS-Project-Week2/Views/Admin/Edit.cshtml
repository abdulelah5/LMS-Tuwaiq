@model LaibrarySystem.Dto.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Book</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.author.Id, "Author name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.author.Id,
           new SelectList(ViewBag.Authors, "Id", "Name"), "Choose", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.author.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAvailable, "Is available", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsAvailable, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            <input class="form-control" id="IsAvailable" name="IsAvailable" type="text" value="@Model.IsAvailable" style="display:none" />
            @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Model.IsAvailable.ToLower() == "no")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.client.Id, "Client name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.client.Id, new { htmlAttributes = new { @class = "form-control" } })*@
                <input class="form-control" type="text" value="@Model.client.ClientName" disabled="disabled" />
                @Html.ValidationMessageFor(model => model.client.Id, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
<div class="form-group">
    @Html.LabelFor(model => model.client.Id, "Give to Client", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.client.Id,
       new SelectList(ViewBag.client, "Id", "ClientName"), "Choose", htmlAttributes: new { @class = "form-control" })
        @*@Html.ValidationMessageFor(model => model.client.Id, "", new { @class = "text-danger" })*@
    </div>
</div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
