@model LaibrarySystem.Dto.Client

@{
    ViewBag.Title = "Register";
    Layout = null;
}
<head>
    <link rel="shortcut icon" href="~/Content/images/logo.png" />

    <link rel="stylesheet" type="text/css" href="~/Content/PagedList.css">
    <link rel="stylesheet" type="text/css" href="~/Content/styles/bootstrap4/bootstrap.min.css">
    <link href="plugins/fontawesome-free-5.0.1/css/fontawesome-all.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/OwlCarousel2-2.2.1/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/OwlCarousel2-2.2.1/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/OwlCarousel2-2.2.1/animate.css">
    <link rel="stylesheet" type="text/css" href="~/Content/styles/main_styles.css">
    <link rel="stylesheet" type="text/css" href="~/Content/styles/responsive.css">
</head>
<link rel="stylesheet" type="text/css" href="~/Content/TableCSS.css">
<body onbeforeunload="setHourglass();" onunload="setHourglass();" style="background-image: url('../../Content/images/slider_background.jpg'); background-repeat: no-repeat; height:fit-content;">
    <div class="container body-content" style="margin-top: 130px">
        @using (Html.BeginForm("Register", "Login", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="mask d-flex align-items-center">
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col-12">
                            <div class="card mask-custom w-50 p-3 h-100">
                                <div class="card-body">
                                    <h2>Register user</h2>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.Id)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ClientName, "Username", htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control myInput text-white" } })
                                            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                        </div>
                                    </div><div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control myInput text-white" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div><div class="form-group">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control myInput text-white" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-outline-warning" />
                                        </div>
                                    </div>
                                    <div class="mt-3">
                                        @if (ViewBag.Message != null)
                                        {
                                            <div>
                                                <span class="text-success"> @ViewBag.Message </span>
                                            </div>
                                        }
                                        else if (ViewBag.Error != null)
                                        {
                                            <div>
                                                <span class="text-danger"> @ViewBag.Error </span>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        @*<div>
                @Html.ActionLink("Back to List", "Index")
            </div>*@
        <a href="@Url.Action("Login","Login")" class="btn btn-light mt-2 ml-4">Back to Login</a>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
    <script type="text/javascript">
            function setHourglass() {
                document.body.style.cursor = 'wait';
            }
    </script>
</body>